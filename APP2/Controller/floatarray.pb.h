/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_FLOATARRAY_PB_H_INCLUDED
#define PB_FLOATARRAY_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _FloatArray { 
    pb_size_t data_count;
    float data[100]; 
} FloatArray;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define FloatArray_init_default                  {0, {0, 0, 0, 0, 0, 0, 0, 0}}
#define FloatArray_init_zero                     {0, {0, 0, 0, 0, 0, 0, 0, 0}}

/* Field tags (for use in manual encoding/decoding) */
#define FloatArray_data_tag                      1

/* Struct field encoding specification for nanopb */
#define FloatArray_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, FLOAT,    data,              1)
#define FloatArray_CALLBACK NULL
#define FloatArray_DEFAULT NULL

extern const pb_msgdesc_t FloatArray_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define FloatArray_fields &FloatArray_msg

/* Maximum encoded size of messages (where known) */
#define FloatArray_size                          40

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
